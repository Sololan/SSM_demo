<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">
    <!-- 除了Controller全扫 -->

    <context:component-scan base-package="com.SSMtest">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--    扫描外部文件 -->
    <context:property-placeholder location="classpath:db.properties"></context:property-placeholder>
    <!--    扫描数据源 配置数据库连接池-->
    <bean class="com.mchange.v2.c3p0.ComboPooledDataSource" id="ds">
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
    </bean>
    <!--    配置mybatis操作数据库-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sessionFactory">
        <!--        配置mybatis全局配置文件-->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
        <!--        配置数据源-->
        <property name="dataSource" ref="ds"></property>
        <!--        配置mybatis映射配置文件-->
        <property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"></property>
    </bean>
    <!--    扫描DAO接口的实现加入容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.SSMtest.DAO"></property>
    </bean>
    <!--    配置事务控制；配置事务管理器，让他控制数据源的连接的关闭和提交-->
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="tm">
        <property name="dataSource" ref="ds"></property>
    </bean>
    <!--基于xml,配置事务，哪些方法配置事务还要切入方法-->
    <aop:config>
        <aop:pointcut id="txpoint" expression="execution(* com.SSMtest.service.*.*())"/>
        <aop:advisor advice-ref="myTx" pointcut-ref="txpoint"></aop:advisor>
    </aop:config>

    <tx:advice id="myTx" transaction-manager="tm">
        <tx:attributes>
            <tx:method name="*" rollback-for="java.lang.Exception"/>
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>
</beans>